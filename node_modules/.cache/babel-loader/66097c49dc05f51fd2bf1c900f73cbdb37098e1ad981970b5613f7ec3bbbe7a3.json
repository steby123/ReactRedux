{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui-slice\";\nconst initialState = {\n  items: [],\n  totalQuantity: 0\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: initialState,\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          itemPrice: newItem.price,\n          itemQuntity: 1,\n          itemTotal: newItem.price,\n          itemName: newItem.title\n        });\n      } else {\n        existingItem.itemQuntity++;\n        existingItem.itemTotal = existingItem.itemQuntity * existingItem.itemPrice;\n      }\n    },\n    removeItemToCart(state, action) {\n      const id = action.payload;\n      const removingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      if (removingItem.itemQuntity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        removingItem.itemQuntity--;\n      }\n    }\n  }\n});\nconst sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.dispatch({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data!'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://learn-redux-f752f-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error('Sending cart data failed.');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'succes',\n        title: 'Succes!',\n        message: 'Sent cart data succesfully!'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Sending cart data failed!'\n      }));\n    }\n  };\n};\nexport default cartSlice.reducer;\nexport const cartAction = cartSlice.actions;","map":{"version":3,"names":["createSlice","uiActions","initialState","items","totalQuantity","cartSlice","name","reducers","replaceCart","state","action","payload","addItemToCart","newItem","existingItem","find","item","id","push","itemPrice","price","itemQuntity","itemTotal","itemName","title","removeItemToCart","removingItem","filter","sendCartData","cart","dispatch","status","message","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","showNotification","error","reducer","cartAction","actions"],"sources":["D:/Learning_React/Advanced_Reduxer/01-starting-project/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { uiActions } from \"./ui-slice\";\r\n\r\nconst initialState = {\r\n  items: [],\r\n  totalQuantity: 0,\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState: initialState,\r\n  reducers: {\r\n    replaceCart(state, action) {\r\n        state.totalQuantity = action.payload.totalQuantity;\r\n        state.items = action.payload.items;\r\n    },\r\n    addItemToCart(state, action) {\r\n      const newItem = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n\r\n      state.totalQuantity++;\r\n\r\n      if (!existingItem) {\r\n        state.items.push({\r\n          id: newItem.id,\r\n          itemPrice: newItem.price,\r\n          itemQuntity: 1,\r\n          itemTotal: newItem.price,\r\n          itemName: newItem.title,\r\n        });\r\n      } else {\r\n        existingItem.itemQuntity++;\r\n        existingItem.itemTotal = existingItem.itemQuntity * existingItem.itemPrice;\r\n      }\r\n    },\r\n    removeItemToCart(state, action) {\r\n      const id = action.payload;\r\n      const removingItem = state.items.find((item) => item.id === id);\r\n\r\n      state.totalQuantity--;\r\n\r\n      if (removingItem.itemQuntity === 1) {\r\n        state.items = state.items.filter((item) => item.id !== id);\r\n      } else {\r\n        removingItem.itemQuntity--;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nconst sendCartData = (cart) => {\r\n  return async (dispatch) => {\r\n    dispatch(\r\n      uiActions.dispatch({\r\n        status:'pending',\r\n        title:'Sending...',\r\n        message:'Sending cart data!'\r\n      })\r\n    )\r\n\r\n    const sendRequest = async () => {\r\n      const response = await fetch('https://learn-redux-f752f-default-rtdb.firebaseio.com/cart.json',{\r\n        method:'PUT',\r\n        body:JSON.stringify(cart)\r\n      });\r\n  \r\n      if(!response.ok){\r\n        throw new Error('Sending cart data failed.')\r\n      }\r\n    }\r\n\r\n    try{\r\n      await sendRequest();\r\n      dispatch(uiActions.showNotification({\r\n        status:'succes',\r\n        title:'Succes!',\r\n        message:'Sent cart data succesfully!'\r\n      }))\r\n    }catch(error){\r\n      dispatch(uiActions.showNotification({\r\n        status:'error',\r\n        title:'Error!',\r\n        message:'Sending cart data failed!'\r\n      }))\r\n    }\r\n\r\n\r\n  }\r\n}\r\n\r\nexport default cartSlice.reducer;\r\nexport const cartAction = cartSlice.actions;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}